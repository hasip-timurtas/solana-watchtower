# Solana Watchtower Configuration for Development and Testing on Devnet
# This configuration is optimized for development with comprehensive monitoring

# Solana connection settings
rpc_url = "https://api.devnet.solana.com"
ws_url = "wss://api.devnet.solana.com"
timeout_seconds = 30
max_reconnect_attempts = 5
reconnect_delay_seconds = 5

# Alternative devnet endpoints for testing
# rpc_url = "https://devnet.genesysgo.net"
# rpc_url = "https://rpc-devnet.solanalabs.com"

# Programs to monitor for development and testing
[[programs]]
id = "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
name = "SPL Token"
monitor_accounts = true
monitor_transactions = true
monitor_logs = true

[[programs]]
id = "11111111111111111111111111111112"
name = "System Program"
monitor_accounts = true
monitor_transactions = true
monitor_logs = true

# Add your test program here:
# [[programs]]
# id = "YourTestProgramAddressHere123456789"
# name = "My Test Program"
# monitor_accounts = true
# monitor_transactions = true
# monitor_logs = true

# Subscription filters optimized for development
include_failed = false
include_votes = false
max_transactions_per_notification = 10
commitment = "confirmed"

# Email notifications (required - primary notification channel)
[email]
smtp_server = "smtp.example.com"
smtp_port = 587
username = "test@example.com"
password = "test_password"
from_address = "alerts@example.com"
to_addresses = ["developer@example.com", "test@example.com"]
use_tls = true

# Development-friendly rate limiting
[rate_limiting]
max_messages_per_minute = 30
burst_size = 10
enabled = true

# Global notification settings for development
[global]
min_severity = "low"
batch_size = 5
batch_timeout_seconds = 300
enable_batching = false

# Dashboard configuration for development
[dashboard]
enabled = true
host = "127.0.0.1"  # Use localhost for security
port = 8082
enable_cors = true

# Application settings with debug logging
[app]
log_level = "debug"

# Optional Telegram notifications for development
# [telegram]
# bot_token = "YOUR_BOT_TOKEN"
# chat_id = "YOUR_CHAT_ID"
# parse_mode = "Markdown"
# disable_web_page_preview = true
# disable_notification = false

# Optional Slack notifications for development  
# [slack]
# webhook_url = "https://hooks.slack.com/services/TEST/HOOK/URL"
# channel = "#solana-alerts-test"
# username = "Solana Watchtower"

# Optional Discord notifications for development
# [discord]
# webhook_url = "https://discord.com/api/webhooks/TEST/WEBHOOK"
# username = "Solana Watchtower"
# use_embeds = true

# DEVELOPMENT FEATURES (may need app support):
# These sections were in your original config for advanced testing

# Enhanced monitoring (if supported by engine)
# [monitoring]
# event_buffer_size = 1000
# rule_evaluation_interval = 10
# enable_debug_logs = true
# enable_websocket_debug = true

# Enhanced metrics (if supported)
[metrics]
enabled = true
port = 9091
retention_days = 1

# Enhanced logging (if supported)
# [logging]
# level = "debug"
# targets = ["console", "file"]
# file_path = "/app/logs/watchtower-devnet.log"
# rotation = "hourly"
# retention_days = 7

# Connection tuning (if supported)
# [connection]
# connection_timeout = 10
# request_timeout = 30
# max_retries = 10
# retry_delay = 1
# keepalive_timeout = 60

# WebSocket settings (if supported)
# [websocket]
# reconnect_interval = 5
# max_reconnect_attempts = 50
# ping_interval = 30
# log_raw_messages = false

# Development tools (if supported)
# [development]
# hot_reload_config = true
# export_metrics_json = true
# export_metrics_path = "/app/data/metrics.json"
# simulation_mode = false

# NOTES FOR TESTING:
# 1. Rules are built-in: LiquidityDropRule, LargeTransactionRule, OracleDeviationRule, FailureRateRule
# 2. Uncomment notification channels above as needed for testing
# 3. Advanced sections may require application updates to support
# 4. Replace test credentials with real ones for live alerts 